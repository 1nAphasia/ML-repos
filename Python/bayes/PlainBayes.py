def loadDataSet():
    data = [
    ["青绿", "蜷缩", "沉闷", "清晰", "凹陷", "硬滑"],
    ["乌黑", "蜷缩", "沉闷", "清晰", "凹陷", "硬滑"],
    ["乌黑", "蜷缩", "浑响", "清晰", "凹陷", "硬滑"],
    ["青绿", "蜷缩", "沉闷", "清晰", "凹陷", "硬滑"],
    ["浅白", "蜷缩", "浑响", "清晰", "凹陷", "硬滑"],
    ["青绿", "蜷缩", "浑响", "清晰", "稍凹", "软粘"],
    ["乌黑", "蜷缩", "浑响", "清晰", "稍凹", "软粘"],
    ["乌黑", "稍蜷", "浑响", "清晰", "稍凹", "硬滑"],
    ["乌黑", "稍蜷", "沉闷", "稍糊", "稍凹", "硬滑"],
    ["青绿", "硬挺", "清脆", "清晰", "平坦", "软粘"],
    ["浅白", "硬挺", "清脆", "模糊", "平坦", "硬滑"],
    ["青绿", "蜷缩", "浑响", "模糊", "平坦", "软粘"],
    ["青绿", "稍蜷", "浑响", "稍糊", "凹陷", "硬滑"],
    ["浅白", "稍蜷", "沉闷", "稍糊", "凹陷", "硬滑"],
    ["乌黑", "稍蜷", "清晰", "稍糊", "稍凹", "软粘"],
    ["浅白", "蜷缩", "浑响", "模糊", "稍凹", "硬滑"],
    ["青绿", "蜷缩", "沉闷", "稍糊", "稍凹", "硬滑"]]
    classVec = [1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0]                                                                   #类别标签向量，1代表侮辱性词汇，0代表不是
    return data,classVec
 
if __name__ == '__main__':
    postingList, classVec = loadDataSet()
    wordList=[]
    # 如果是西瓜数据集,直接去计算后验概率
    # 如果是词袋模型,则需要先进行统计转换为可能出现的词向量,其可能出现也可能不出现。这样就将其转换为了有序的属性格式,之后以此来进行后验概率的计算。
    